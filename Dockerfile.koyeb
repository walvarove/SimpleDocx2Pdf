FROM golang:1.21-alpine AS builder

WORKDIR /app

# Install LibreOffice and required dependencies
RUN apk add --no-cache libreoffice libreoffice-writer msttcorefonts-installer fontconfig && \
    update-ms-fonts && \
    fc-cache -f

# Copy go.mod and go.sum files
COPY go.mod go.sum* ./

# Download and tidy dependencies
RUN go mod tidy

# Copy the source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -o /app/docx2pdf ./cmd/server

# Final stage - using Debian for better compatibility with Koyeb
FROM debian:bullseye-slim

# Install LibreOffice and required dependencies
RUN apt-get update && apt-get install -y \
    libreoffice \
    fonts-liberation \
    && rm -rf /var/lib/apt/lists/*

# Create directory for temporary files
RUN mkdir -p /tmp/docx2pdf

# Copy the binary from the builder stage to multiple locations
COPY --from=builder /app/docx2pdf /app/docx2pdf
COPY --from=builder /app/docx2pdf /docx2pdf
COPY --from=builder /app/docx2pdf /usr/local/bin/docx2pdf

# Make sure the binary is executable
RUN chmod +x /app/docx2pdf /docx2pdf /usr/local/bin/docx2pdf

# Copy scripts
COPY entrypoint.sh /entrypoint.sh
COPY start.sh /start.sh
RUN chmod +x /entrypoint.sh /start.sh

# Expose the API port
EXPOSE 8080

# Set working directory
WORKDIR /app

# Run the application using the entrypoint script
CMD ["/entrypoint.sh"] 